% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_postit.R
\name{create_postit}
\alias{create_postit}
\title{Create a styled text label as a ggplot object}
\usage{
create_postit(
  text = "Post-IT",
  text_color = "Black",
  text_size = 200,
  text_fontface = "plain",
  text_fontfamily = "sans",
  fill_color = "yellow1",
  fill_alpha = 0.3,
  border_alpha = 1,
  border_width = 10,
  custom_fill = NULL,
  custom_text_color = NULL,
  h_pos = "center",
  v_pos = "middle",
  wrap = TRUE,
  text_width = 40,
  max_lines = 5,
  truncate = TRUE,
  abbreviate_text = FALSE,
  abbr_minlength = NULL,
  plot = TRUE
)
}
\arguments{
\item{text}{Character string to display.}

\item{text_color}{Named color from internal palette.}

\item{text_size}{Numeric font size in points.}

\item{text_fontface}{Font face ("plain", "bold", etc.).}

\item{text_fontfamily}{Font family ("sans", "serif", etc.).}

\item{fill_color}{Background fill color name from internal palette.}

\item{fill_alpha}{Fill opacity (0 to 1).}

\item{border_alpha}{Border opacity (0 to 1).}

\item{border_width}{Numeric border line width.}

\item{custom_fill}{Optional hex code to override \code{fill_color}.}

\item{custom_text_color}{Optional hex to override \code{text_color}.}

\item{h_pos}{Horizontal alignment: "left", "center", or "right".}

\item{v_pos}{Vertical alignment: "top", "middle", or "bottom".}

\item{wrap}{Whether to wrap long text.}

\item{text_width}{Max characters per line when wrapping.}

\item{max_lines}{Max lines before truncation. If 0, returns an empty note.}

\item{truncate}{Truncate and add "..." if text exceeds \code{max_lines}.}

\item{abbreviate_text}{Abbreviate each word before rendering.}

\item{abbr_minlength}{Minimum length per word in abbreviation.}

\item{plot}{If TRUE, plot immediately. If FALSE, just return ggplot object.}
}
\value{
A \code{ggplot} object displaying the formatted text.
}
\description{
Returns a \code{ggplot} object with styled text using \code{ggtext::geom_textbox}.
Intended for labeling within NIDAP Code Workbooksâ€”marking workflow stages,
annotating nodes, or visually separating pipeline sections. Supports wrapping,
truncation, abbreviation, font styling, and optional plotting.
}
