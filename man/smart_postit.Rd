% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smart_postit.R
\name{smart_postit}
\alias{smart_postit}
\title{Generate a Post-IT style graphic with optimized text sizing and layout}
\usage{
smart_postit(
  text_string,
  device_width = 12,
  device_height = 7,
  fill_color = "yellow1",
  fill_alpha = 0.3,
  border_color = "yellow3",
  border_alpha = 1,
  border_size = 1,
  text_color = "black",
  custom_fill_color = NULL,
  custom_border_color = NULL,
  custom_text_color = NULL,
  padding_width = 0.1,
  padding_height = 0.1,
  use_relative_padding = TRUE,
  font_family = "",
  font_face = "plain",
  min_line_spacing = NULL,
  max_line_spacing = NULL,
  output = c("plot", "object"),
  manage_device = FALSE,
  bg_clipped = TRUE,
  debug_guides = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{text_string}{Character. Input string for the note.}

\item{device_width}{Numeric. Width of the device in inches.}

\item{device_height}{Numeric. Height of the device in inches.}

\item{fill_color}{Character. Fill color from palette or hex code.}

\item{fill_alpha}{Numeric. Alpha transparency for the fill color.}

\item{border_color}{Character. Border color from palette or hex code.}

\item{border_alpha}{Numeric. Alpha transparency for the border color.}

\item{border_size}{Numeric. Border line width in points.}

\item{text_color}{Character. Text color from palette or hex code.}

\item{custom_fill_color}{Character. Custom fill color (overrides palette).}

\item{custom_border_color}{Character. Custom border color (overrides
palette).}

\item{custom_text_color}{Character. Custom text color (overrides palette).}

\item{padding_width}{Numeric. Horizontal padding size (absolute or relative).}

\item{padding_height}{Numeric. Vertical padding size (absolute or relative).}

\item{use_relative_padding}{Logical. Whether padding is relative to device
size.}

\item{font_family}{Character. Font family for the text.}

\item{font_face}{Character. Font face (e.g., "plain", "bold", "italic").}

\item{min_line_spacing}{Numeric or NULL. Minimum spacing between lines.}

\item{max_line_spacing}{Numeric or NULL. Maximum spacing between lines.}

\item{output}{Character. Either \code{"plot"} or \code{"object"} (returns patchwork).}

\item{manage_device}{Logical. If \code{TRUE}, closes graphics devices before
rendering.}

\item{bg_clipped}{Logical. If \code{TRUE}, background is clipped to the viewport.}

\item{debug_guides}{Logical. If \code{TRUE}, shows guide lines for alignment and
padding.}

\item{verbose}{Logical. If \code{TRUE}, prints selected layout and font size to
console.}
}
\value{
A grid drawing or patchwork object, depending on \code{output}.
}
\description{
Automatically computes the best text layout and maximum font size to render
the input string within the specified dimensions. Text is parsed using soft
breaks (spaces), hard breaks (\code{/}), and linked words (\code{~}) to guide line
wrapping. The result is a centered, readable graphic with aligned and
balanced text lines that adapt to content and constraints.
}
\examples{
smart_postit(
  text_string = "Post-IT",
  fill_color = "grey1",
  custom_border_color = "midnightblue",
  custom_text_color = "midnightblue",
  font_face = "plain",
  device_width = 6,
  device_height = 4,
  padding_height = 0.1,
  padding_width = 0,
  use_relative_padding = TRUE,
  manage_device = TRUE,
  verbose = FALSE
)
}
\seealso{
\link{postit_palette}, \code{\link[=show_postit_palette]{show_postit_palette()}}
}
